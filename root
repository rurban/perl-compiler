{"version":1,"ops":[{"type":1,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426202711,"metadata":{"github-id":"MDU6SXNzdWU2MDkzNDI2MA==","github-url":"https://github.com/rurban/perl-compiler/issues/57","origin":"github"},"title":"B:CC code fails with segfaults for non local loop exit","message":"Original [issue 55](https://code.google.com/p/perl-compiler/issues/detail?id=55) created by rurban on 2010-11-11T22:17:04.000Z:\n\nThis test program segfaults when compiled with B::CC.\n# test21.pl\n\nLOOP:\n{\n    my $sub = sub { last LOOP; };\n    $sub-\u0026gt;();\n# }\n\n$ ~/localperl/bin/perlcc -O -o test21 test21.pl\npcccToOs.c:131: warning: initialization from incompatible pointer type\npcccToOs.c:132: warning: initialization from incompatible pointer type\npcccToOs.c:133: warning: initialization from incompatible pointer type\npcccToOs.c:134: warning: initialization from incompatible pointer type\n$ ./test21\nSegmentation fault\n\nUsed versions:\n- perl v5.12.1 built for i686-linux\n- B::C r774\n\nFor the case of non local exit, B:CC currently generates a call to pp_last.\npp_last pops the cxstack and returns the next to be executed op code.\nThis is fine for the perl interpreter, but doesn't help with the code from B:CC which doesn't walk the op-tree.\n\nIn the first step, B:CC should be changed to generate code which aborts at runtime with some descriptive error message. This would allow the user to change her program to not use non local exits.","files":null}]}