{"version":1,"ops":[{"type":1,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426277901,"metadata":{"github-id":"MDU6SXNzdWU2MTIxOTAwNA==","github-url":"https://github.com/rurban/perl-compiler/issues/181","origin":"github"},"title":"smartmatch subrefs","message":"Original [issue 179](https://code.google.com/p/perl-compiler/issues/detail?id=179) created by atoomic on 2013-11-08T20:51:14.000Z:\n\n\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\ncompile  the smartmatch script provided bellow\n1. /usr/local/cpanel/3rdparty/perl/514/bin/perl -MO=-qq,C,-O2,-fno-warnings,-fno-fold,-oop/smartmatch.c op/smartmatch.t\n2. /usr/local/cpanel/3rdparty/perl/514/bin/perl ../../script/cc_harness -q  op/smartmatch.c -o op/smartmatch.bin\n3. ./op/smartmatch.bin\n\n``` perl\n{\n    package Foo;\n    sub new { bless {} }\n}\n\npackage main;\n\nour $foo = Foo-\u003enew;\nour $bar = $foor; # required to generate the wrong behavior\n\nmy $match = eval '$foo ~~ undef' ? 1 : 0;\nprint \"match ? $match\\n\";\n```\n\n\u003cb\u003eWhat is the expected output? What do you see instead?\u003c/b\u003e\n\nexpect: match ? 0\ngot: match ? 1\n\n\u003cb\u003eWhat perl version are you using? Threaded? -DDEBUGGING? On what operating\u003c/b\u003e\n\u003cb\u003esystem?\u003c/b\u003e\n\nperl 5.14.3 on centos 6.4 32 bits\n\n\u003cb\u003ePlease provide any additional information below.\u003c/b\u003e","files":null}]}