{"version":1,"ops":[{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1443786351,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0NDk5NjgxMA==","github-url":"https://github.com/rurban/perl-compiler/issues/220#issuecomment-144996810"},"message":"That's the compile-time hints hash %^H, which is `PL_compiling.cop_hints_hash`.\n\nThe run-time cop_hints are stored correctly, but here the bug is that the run-time cop_hints (from main_cv) should take over the values from PL_hints.","files":null},{"type":5,"author":{"id":"10c623ced12a685284188dc5ea89cffce509dd3d"},"timestamp":1446154917,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ0OTc4NTQ2MQ=="},"added":["CoreTests.522"],"removed":[]},{"type":5,"author":{"id":"10c623ced12a685284188dc5ea89cffce509dd3d"},"timestamp":1446161258,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ0OTg2MzUxMQ=="},"added":["Priority-Medium"],"removed":[]},{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1447942832,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1ODA3MTA5Ng==","github-url":"https://github.com/rurban/perl-compiler/issues/220#issuecomment-158071096"},"message":"use open #31 is related to not storing %^H\ntestcases: t/testc.sh -q -k -O0 130 180 203 2900 220 250 302 304","files":null},{"type":3,"author":{"id":"56586ed5deca9cd92c92f9ff0458b9bd60f911f3"},"timestamp":1537477074,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMzMzMDgzNg==","github-url":"https://github.com/rurban/perl-compiler/issues/221#issuecomment-423330836"},"message":"the two previous examples above are currently working with Perl 5.28.0 and bc528 branch from https://github.com/CpanelInc/perl-compiler/tree/bc528","files":null},{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1537513651,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMzQzNTk0NA==","github-url":"https://github.com/rurban/perl-compiler/issues/221#issuecomment-423435944"},"message":"Thanks. Though is arguably related to an upstream bug, which I fixed in cperl. anonymization is information loss, and an internal bug. no end-user will agree that anon subs are a good thing. esp. with caller and backtrackes. devel::nytprof and cperl use better names for these. https://github.com/perl11/cperl/issues/370\n\nbut here it's clearly our cv refcnt bug.","files":null}]}