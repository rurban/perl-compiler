{"version":1,"ops":[{"type":5,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426277902,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI1MjU2NTgyNw=="},"added":["Type-Defect"],"removed":[]},{"type":5,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426277902,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI1MjU2NTgyOA=="},"added":["Priority-Low"],"removed":[]},{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426277904,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5MzM5Mjg5","github-url":"https://github.com/rurban/perl-compiler/issues/181#issuecomment-79339289"},"message":"Comment [#1](https://code.google.com/p/perl-compiler/issues/detail?id=179#c1) originally posted by atoomic on 2013-11-08T21:03:59.000Z:\n\nsimilar problem with:\n- q/$foo ~~ $foo/ # should return 0\n- q/$foo ~~ [sub{ref shift}]/ # should return 1","files":null},{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426277908,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5MzM5Mzc5","github-url":"https://github.com/rurban/perl-compiler/issues/181#issuecomment-79339379"},"message":"Comment [#2](https://code.google.com/p/perl-compiler/issues/detail?id=179#c2) originally posted by rurban on 2013-11-11T16:10:16.000Z:\n\n\u0026lt;empty\u0026gt;","files":null},{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426277912,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5MzM5NDY4","github-url":"https://github.com/rurban/perl-compiler/issues/181#issuecomment-79339468"},"message":"Comment [#3](https://code.google.com/p/perl-compiler/issues/detail?id=179#c3) originally posted by rurban on 2013-12-04T18:26:52.000Z:\n\n\u0026lt;empty\u0026gt;","files":null},{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426277916,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5MzM5NTY4","github-url":"https://github.com/rurban/perl-compiler/issues/181#issuecomment-79339568"},"message":"Comment [#4](https://code.google.com/p/perl-compiler/issues/detail?id=179#c4) originally posted by rurban on 2014-02-05T17:28:26.000Z:\n\nWithout eval it behaves correctly:\n\n``` perl\n{\n    package Foo;\n    sub new { bless {} }\n}\n\npackage main;\n\nour $foo = Foo-\u003enew;\nour $bar = $foor; # required to generate the wrong behavior\n\nmy $match = ($foo ~~ undef) ? 1 : 0;\nprint \"match: $match\\n\";\n```\n\n=\u003e match: 0 (compiled and uncompiled)","files":null},{"type":3,"author":{"id":"10c623ced12a685284188dc5ea89cffce509dd3d"},"timestamp":1446157705,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MjM0NTcxMw==","github-url":"https://github.com/rurban/perl-compiler/issues/181#issuecomment-152345713"},"message":"This passes in both of the reported ways on master now. This bug is resolved.","files":null},{"type":4,"author":{"id":"10c623ced12a685284188dc5ea89cffce509dd3d"},"timestamp":1446157705,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDQ5ODIzOTkx"},"status":2}]}