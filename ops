{"version":1,"ops":[{"type":1,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426203009,"metadata":{"github-id":"MDU6SXNzdWU2MDkzNTE2OA==","github-url":"https://github.com/rurban/perl-compiler/issues/75","origin":"github"},"title":"Module initialization code generates wrong hash key for object","message":"Original [issue 73](https://code.google.com/p/perl-compiler/issues/detail?id=73) created by rurban on 2011-07-01T21:09:08.000Z:\n\nIf a perl program \u0026quot;use\u0026quot; a module, any code outside of functions executes when you use it.\nThe perl compiler executes this code during compile time.\nReferences use addresses of the perl interpreter which executes the compiler.\nWhen the compiled program is run later, it uses other addresses for the same references.\nThis can cause a bug, if a reference is used \n- to initialize a hash at compile time and\n- to lookup up the same reference at runtime.\n\nTestcase:\n# File Bug.pm\n\npackage Bug;\n\nmy %ref2obj;\nmy $obj = { name =\u0026gt; 'xyz' };\nprint(\u0026quot;Ref: $obj\\n\u0026quot;);\n$ref2obj{$obj} = $obj;\nprint(\u0026quot;Key: \u0026quot;, keys %ref2obj, \u0026quot;\\n\u0026quot;);\n\nsub f {\n    print(\u0026quot;Ref: $obj\\n\u0026quot;);\n    print(\u0026quot;Key: \u0026quot;, keys %ref2obj, \u0026quot;\\n\u0026quot;);\n    my $result = $ref2obj{$obj};\n    print \u0026quot;Name: $result-\u0026gt;{name}\\n\u0026quot; if $result;\n}\n#1\n# File test.pl\n\nuse Bug;\n# Bug::f();\n\nExpected output:\n$ perl test.pl\nRef: HASH(0x8422190)\nKey: HASH(0x8422190)\nRef: HASH(0x8422190)\nKey: HASH(0x8422190)\nName: xyz\n\nWith perl compiler:\n$ perl -MO=C,-otest.c test.pl\nRef: HASH(0x9c6cee8)\nKey: HASH(0x9c6cee8)\ntest.pl syntax OK\n\n$ perl -I ~/perl-compiler/lib ~/perl-compiler/script/cc_harness -o test test.c\ncc ...\n\n$ ./test\nRef: HASH(0x815b9f0)\nKey: HASH(0x9c6cee8)\n\n($obj isn't found in %ref2obj)\n\nUsed versions:\n- perl v5.12.3\n- B::C r1111","files":null}]}