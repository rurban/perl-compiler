{"version":1,"ops":[{"type":5,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426241725,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI1MTc3MDcwMQ=="},"added":["Type-Defect"],"removed":[]},{"type":5,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426241725,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI1MTc3MDcwMg=="},"added":["Priority-Critical"],"removed":[]},{"type":3,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426241727,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc4OTAwODE5","github-url":"https://github.com/rurban/perl-compiler/issues/112#issuecomment-78900819"},"message":"Comment [#1](https://code.google.com/p/perl-compiler/issues/detail?id=110#c1) originally posted by rurban on 2012-10-15T20:42:37.000Z:\n\nFixed with 91b6646\n\nSave ENTERSUB next and first fields\nfirst is not not needed as its generally NULL, \nbut next is needed to end the ENTERSUB loop (here unop_list[2])\n\n```\nDOOP(PL_ppaddr[OP_ENTERSUB]);\nwhile (PL_op != ((OP*)\u0026unop_list[2])-\u003eop_next \u0026\u0026  PL_op != (OP*)0 ){\n    PL_op = (*PL_op-\u003eop_ppaddr)(aTHX);\n    SPAGAIN;}\n```\n\nI keep the unresolved $section symbol s\\xxx warning with verbose but added\na better description.\n\nThis is most likely a critical internal compiler bug, esp. if in\nWith B::C this is most likely a critical internal compiler bug, esp. if in\nan op section.\nWith B::CC it can be caused by valid optimizations, e.g. when op-\u003enext\npointers were inlined or inlined GV or CONST ops were optimized away.","files":null},{"type":4,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426241730,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjUxNzcwNzQ3"},"status":2}]}