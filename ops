{"version":1,"ops":[{"type":1,"author":{"id":"dc64d6d260e2683565fe6e13d60cfbe9fec0fa09"},"timestamp":1426203302,"metadata":{"github-id":"MDU6SXNzdWU2MDkzNjYyMg==","github-url":"https://github.com/rurban/perl-compiler/issues/95","origin":"github"},"title":"Recover state of IO handles","message":"Original [issue 93](https://code.google.com/p/perl-compiler/issues/detail?id=93) created by rurban on 2012-01-19T00:28:27.000Z:\n\nAt BEGIN time saved IO objects cannot be restored at run-time yet.\nNo aliases to stdhandles, no files, and other IO handles.\npipes, sockets, ... should probably die at compile time.\n\nThe rest could be supported, but is not guaranteed to work \nat run-time. At least we should try.\ne.g. write at pos 10\n\nTo kill a process from a BEGIN block is a bad idea. \nBut should we reset to undef or try to detect that?\nThis is just for demonstration purposes of compiler limitations.\n\n```\n# === compiled ===\nmy ($pid, $out, $in);\nBEGIN {\n  local(*FPID);\n  $pid = open(FPID, \u0026quot;echo \u0026lt;\u0026lt;EOF |\u0026quot;);\n  open($out, \u0026quot;\u0026gt;\u0026amp;STDOUT\u0026quot;);\n  open(my $tmp, \u0026quot;\u0026gt;\u0026quot;, \u0026quot;.tmpfile\u0026quot;);\n  print $tmp \u0026quot;test\\n\u0026quot;;\n  close $tmp;\n  open($in, \u0026quot;\u0026lt;\u0026quot;, \u0026quot;.tmpfile\u0026quot;);\n}\n# === run-time ===\nprint $out 'ok';\nkill 1, $pid;\nread $in, my $x, 4;\n```","files":null}]}